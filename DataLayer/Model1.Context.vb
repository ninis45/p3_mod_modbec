'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class CIEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=CIEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property AGUJERO() As DbSet(Of AGUJERO)
    Public Overridable Property POZO() As DbSet(Of POZO)
    Public Overridable Property CAT_CORRELACION() As DbSet(Of CAT_CORRELACION)
    Public Overridable Property CAT_MOD_POZO_QUICK() As DbSet(Of CAT_MOD_POZO_QUICK)
    Public Overridable Property CAT_TIPO_TUBERIA() As DbSet(Of CAT_TIPO_TUBERIA)
    Public Overridable Property COMPORTAMIENTO_GASBN() As DbSet(Of COMPORTAMIENTO_GASBN)
    Public Overridable Property CONFIGURACION_ADMINISTRADOR() As DbSet(Of CONFIGURACION_ADMINISTRADOR)
    Public Overridable Property CORRELACION() As DbSet(Of CORRELACION)
    Public Overridable Property CORRELACION_GENERAL() As DbSet(Of CORRELACION_GENERAL)
    Public Overridable Property CORRELACION_OPTIMA() As DbSet(Of CORRELACION_OPTIMA)
    Public Overridable Property EJECUCION_PROCESOS() As DbSet(Of EJECUCION_PROCESOS)
    Public Overridable Property IPR() As DbSet(Of IPR)
    Public Overridable Property IPR_GENERAL() As DbSet(Of IPR_GENERAL)
    Public Overridable Property MOD_POZO() As DbSet(Of MOD_POZO)
    Public Overridable Property MOD_POZO_BEC() As DbSet(Of MOD_POZO_BEC)
    Public Overridable Property MOD_POZO_GENERAL() As DbSet(Of MOD_POZO_GENERAL)
    Public Overridable Property MOD_POZO_QUICK() As DbSet(Of MOD_POZO_QUICK)
    Public Overridable Property MOD_POZO_QUICK_GEN() As DbSet(Of MOD_POZO_QUICK_GEN)
    Public Overridable Property MOD_POZO_TEMP() As DbSet(Of MOD_POZO_TEMP)
    Public Overridable Property MOD_POZO_TRAYEC() As DbSet(Of MOD_POZO_TRAYEC)
    Public Overridable Property MOD_POZO_TUBERIA() As DbSet(Of MOD_POZO_TUBERIA)
    Public Overridable Property PRODUCTIVIDAD() As DbSet(Of PRODUCTIVIDAD)
    Public Overridable Property VLP_IPR() As DbSet(Of VLP_IPR)
    Public Overridable Property VLP_IPR_DETALLE() As DbSet(Of VLP_IPR_DETALLE)
    Public Overridable Property VLP_IPR_GASTO_DETALLE() As DbSet(Of VLP_IPR_GASTO_DETALLE)
    Public Overridable Property VLP_IPR_GASTO_INYECCION() As DbSet(Of VLP_IPR_GASTO_INYECCION)
    Public Overridable Property PRODUCTIVIDAD_DETALLE() As DbSet(Of PRODUCTIVIDAD_DETALLE)
    Public Overridable Property VW_TRAYECTORIA() As DbSet(Of VW_TRAYECTORIA)
    Public Overridable Property VW_USUARIOS_POZOS() As DbSet(Of VW_USUARIOS_POZOS)
    Public Overridable Property VW_CORRELACIONES() As DbSet(Of VW_CORRELACIONES)
    Public Overridable Property VW_EDO_GENERAL() As DbSet(Of VW_EDO_GENERAL)
    Public Overridable Property VW_EDO_MECANICO() As DbSet(Of VW_EDO_MECANICO)
    Public Overridable Property VW_MOD_POZO() As DbSet(Of VW_MOD_POZO)
    Public Overridable Property VW_VLP_GASTOS() As DbSet(Of VW_VLP_GASTOS)
    Public Overridable Property BOMBA() As DbSet(Of BOMBA)
    Public Overridable Property CAT_FABRICANTE() As DbSet(Of CAT_FABRICANTE)
    Public Overridable Property COEFICIENTES() As DbSet(Of COEFICIENTES)
    Public Overridable Property CURVA_CARGA() As DbSet(Of CURVA_CARGA)
    Public Overridable Property DIVISIONES_COEFICIENTES() As DbSet(Of DIVISIONES_COEFICIENTES)
    Public Overridable Property MOD_POZO_BNC() As DbSet(Of MOD_POZO_BNC)

    <DbFunction("CIEntities", "func_arbol_detalles")>
    Public Overridable Function func_arbol_detalles(tabla As String) As IQueryable(Of func_arbol_detalles_Result)
        Dim tablaParameter As ObjectParameter = If(tabla IsNot Nothing, New ObjectParameter("tabla", tabla), New ObjectParameter("tabla", GetType(String)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of func_arbol_detalles_Result)("[CIEntities].[func_arbol_detalles](@tabla)", tablaParameter)
    End Function

    <DbFunction("CIEntities", "func_retornarUltimosCalculados")>
    Public Overridable Function func_retornarUltimosCalculados(cADENA As String) As IQueryable(Of func_retornarUltimosCalculados_Result)
        Dim cADENAParameter As ObjectParameter = If(cADENA IsNot Nothing, New ObjectParameter("CADENA", cADENA), New ObjectParameter("CADENA", GetType(String)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of func_retornarUltimosCalculados_Result)("[CIEntities].[func_retornarUltimosCalculados](@CADENA)", cADENAParameter)
    End Function

    <DbFunction("CIEntities", "StringSplit")>
    Public Overridable Function StringSplit([string] As String, separator As String) As IQueryable(Of StringSplit_Result)
        Dim stringParameter As ObjectParameter = If([string] IsNot Nothing, New ObjectParameter("String", [string]), New ObjectParameter("String", GetType(String)))

        Dim separatorParameter As ObjectParameter = If(separator IsNot Nothing, New ObjectParameter("Separator", separator), New ObjectParameter("Separator", GetType(String)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of StringSplit_Result)("[CIEntities].[StringSplit](@String, @Separator)", stringParameter, separatorParameter)
    End Function

    <DbFunction("CIEntities", "ESTRUCTURA_ARBOL")>
    Public Overridable Function ESTRUCTURA_ARBOL(p_ID As Nullable(Of Decimal)) As IQueryable(Of ESTRUCTURA_ARBOL_Result)
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of ESTRUCTURA_ARBOL_Result)("[CIEntities].[ESTRUCTURA_ARBOL](@P_ID)", p_IDParameter)
    End Function

    <DbFunction("CIEntities", "FUNCIONALIDAD_ARBOL")>
    Public Overridable Function FUNCIONALIDAD_ARBOL(p_ID As Nullable(Of Decimal)) As IQueryable(Of FUNCIONALIDAD_ARBOL_Result)
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of FUNCIONALIDAD_ARBOL_Result)("[CIEntities].[FUNCIONALIDAD_ARBOL](@P_ID)", p_IDParameter)
    End Function

    Public Overridable Function Chats(iDInstalacion As String, tipo As String) As ObjectResult(Of String)
        Dim iDInstalacionParameter As ObjectParameter = If(iDInstalacion IsNot Nothing, New ObjectParameter("IDInstalacion", iDInstalacion), New ObjectParameter("IDInstalacion", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Chats", iDInstalacionParameter, tipoParameter)
    End Function

    Public Overridable Function actualizarBalance(iDCATYACIMIENTO As String, iDBALANCE As String, iNDICADORWEI As Nullable(Of Double), wEIINICIAL As String, r As Nullable(Of Double), aPI As Nullable(Of Double), iNYGAS As Nullable(Of Double), iNYAGUA As Nullable(Of Double), iNDICADORCT As Nullable(Of Double), cT As Nullable(Of Double), cF As Nullable(Of Double), cW As Nullable(Of Double), sWI As Nullable(Of Double), fRFACEITE As Nullable(Of Double), fRFGAS As Nullable(Of Double), wEICALCULADO As String, nFOI As String, gFGI As Nullable(Of Double), n As String, g As String, jW As Nullable(Of Double)) As ObjectResult(Of Nullable(Of Integer))
        Dim iDCATYACIMIENTOParameter As ObjectParameter = If(iDCATYACIMIENTO IsNot Nothing, New ObjectParameter("IDCATYACIMIENTO", iDCATYACIMIENTO), New ObjectParameter("IDCATYACIMIENTO", GetType(String)))

        Dim iDBALANCEParameter As ObjectParameter = If(iDBALANCE IsNot Nothing, New ObjectParameter("IDBALANCE", iDBALANCE), New ObjectParameter("IDBALANCE", GetType(String)))

        Dim iNDICADORWEIParameter As ObjectParameter = If(iNDICADORWEI.HasValue, New ObjectParameter("INDICADORWEI", iNDICADORWEI), New ObjectParameter("INDICADORWEI", GetType(Double)))

        Dim wEIINICIALParameter As ObjectParameter = If(wEIINICIAL IsNot Nothing, New ObjectParameter("WEIINICIAL", wEIINICIAL), New ObjectParameter("WEIINICIAL", GetType(String)))

        Dim rParameter As ObjectParameter = If(r.HasValue, New ObjectParameter("R", r), New ObjectParameter("R", GetType(Double)))

        Dim aPIParameter As ObjectParameter = If(aPI.HasValue, New ObjectParameter("API", aPI), New ObjectParameter("API", GetType(Double)))

        Dim iNYGASParameter As ObjectParameter = If(iNYGAS.HasValue, New ObjectParameter("INYGAS", iNYGAS), New ObjectParameter("INYGAS", GetType(Double)))

        Dim iNYAGUAParameter As ObjectParameter = If(iNYAGUA.HasValue, New ObjectParameter("INYAGUA", iNYAGUA), New ObjectParameter("INYAGUA", GetType(Double)))

        Dim iNDICADORCTParameter As ObjectParameter = If(iNDICADORCT.HasValue, New ObjectParameter("INDICADORCT", iNDICADORCT), New ObjectParameter("INDICADORCT", GetType(Double)))

        Dim cTParameter As ObjectParameter = If(cT.HasValue, New ObjectParameter("CT", cT), New ObjectParameter("CT", GetType(Double)))

        Dim cFParameter As ObjectParameter = If(cF.HasValue, New ObjectParameter("CF", cF), New ObjectParameter("CF", GetType(Double)))

        Dim cWParameter As ObjectParameter = If(cW.HasValue, New ObjectParameter("CW", cW), New ObjectParameter("CW", GetType(Double)))

        Dim sWIParameter As ObjectParameter = If(sWI.HasValue, New ObjectParameter("SWI", sWI), New ObjectParameter("SWI", GetType(Double)))

        Dim fRFACEITEParameter As ObjectParameter = If(fRFACEITE.HasValue, New ObjectParameter("FRFACEITE", fRFACEITE), New ObjectParameter("FRFACEITE", GetType(Double)))

        Dim fRFGASParameter As ObjectParameter = If(fRFGAS.HasValue, New ObjectParameter("FRFGAS", fRFGAS), New ObjectParameter("FRFGAS", GetType(Double)))

        Dim wEICALCULADOParameter As ObjectParameter = If(wEICALCULADO IsNot Nothing, New ObjectParameter("WEICALCULADO", wEICALCULADO), New ObjectParameter("WEICALCULADO", GetType(String)))

        Dim nFOIParameter As ObjectParameter = If(nFOI IsNot Nothing, New ObjectParameter("NFOI", nFOI), New ObjectParameter("NFOI", GetType(String)))

        Dim gFGIParameter As ObjectParameter = If(gFGI.HasValue, New ObjectParameter("GFGI", gFGI), New ObjectParameter("GFGI", GetType(Double)))

        Dim nParameter As ObjectParameter = If(n IsNot Nothing, New ObjectParameter("N", n), New ObjectParameter("N", GetType(String)))

        Dim gParameter As ObjectParameter = If(g IsNot Nothing, New ObjectParameter("G", g), New ObjectParameter("G", GetType(String)))

        Dim jWParameter As ObjectParameter = If(jW.HasValue, New ObjectParameter("JW", jW), New ObjectParameter("JW", GetType(Double)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("actualizarBalance", iDCATYACIMIENTOParameter, iDBALANCEParameter, iNDICADORWEIParameter, wEIINICIALParameter, rParameter, aPIParameter, iNYGASParameter, iNYAGUAParameter, iNDICADORCTParameter, cTParameter, cFParameter, cWParameter, sWIParameter, fRFACEITEParameter, fRFGASParameter, wEICALCULADOParameter, nFOIParameter, gFGIParameter, nParameter, gParameter, jWParameter)
    End Function

    Public Overridable Function AGREGARUSUARIO(iNUSER As String, pASSWORD As String, nOMBRE As String, aPELLIDOS As String) As ObjectResult(Of String)
        Dim iNUSERParameter As ObjectParameter = If(iNUSER IsNot Nothing, New ObjectParameter("INUSER", iNUSER), New ObjectParameter("INUSER", GetType(String)))

        Dim pASSWORDParameter As ObjectParameter = If(pASSWORD IsNot Nothing, New ObjectParameter("PASSWORD", pASSWORD), New ObjectParameter("PASSWORD", GetType(String)))

        Dim nOMBREParameter As ObjectParameter = If(nOMBRE IsNot Nothing, New ObjectParameter("NOMBRE", nOMBRE), New ObjectParameter("NOMBRE", GetType(String)))

        Dim aPELLIDOSParameter As ObjectParameter = If(aPELLIDOS IsNot Nothing, New ObjectParameter("APELLIDOS", aPELLIDOS), New ObjectParameter("APELLIDOS", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("AGREGARUSUARIO", iNUSERParameter, pASSWORDParameter, nOMBREParameter, aPELLIDOSParameter)
    End Function

    Public Overridable Function BusquedaCompleta(buscarStr As String) As Integer
        Dim buscarStrParameter As ObjectParameter = If(buscarStr IsNot Nothing, New ObjectParameter("buscarStr", buscarStr), New ObjectParameter("buscarStr", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("BusquedaCompleta", buscarStrParameter)
    End Function

    Public Overridable Function EdoMec_IdTuberiaProduccion(iDAGUJERO As String, iDPOZO As String) As ObjectResult(Of String)
        Dim iDAGUJEROParameter As ObjectParameter = If(iDAGUJERO IsNot Nothing, New ObjectParameter("IDAGUJERO", iDAGUJERO), New ObjectParameter("IDAGUJERO", GetType(String)))

        Dim iDPOZOParameter As ObjectParameter = If(iDPOZO IsNot Nothing, New ObjectParameter("IDPOZO", iDPOZO), New ObjectParameter("IDPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("EdoMec_IdTuberiaProduccion", iDAGUJEROParameter, iDPOZOParameter)
    End Function

    Public Overridable Function EdoMec_Inicio() As ObjectResult(Of EdoMec_Inicio_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of EdoMec_Inicio_Result)("EdoMec_Inicio")
    End Function

    Public Overridable Function ELIMINAR_DUP_TABLERO() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ELIMINAR_DUP_TABLERO")
    End Function

    Public Overridable Function insertarBalance(iDFORMACION As String, iDCATYACIMIENTO As String, iNDICADORWEI As Nullable(Of Double), wEIINICIAL As Nullable(Of Double), r As Nullable(Of Double), aPI As Nullable(Of Double), iNYGAS As Nullable(Of Double), iNYAGUA As Nullable(Of Double), iNDICADORCT As Nullable(Of Double), cT As Nullable(Of Double), cF As Nullable(Of Double), cW As Nullable(Of Double), sWI As Nullable(Of Double), fRFACEITE As Nullable(Of Double), fRFGAS As Nullable(Of Double), wEICALCULADO As Nullable(Of Double), nFOI As Nullable(Of Double), gFGI As Nullable(Of Double), n As Nullable(Of Double), g As Nullable(Of Double), jW As Nullable(Of Double)) As ObjectResult(Of String)
        Dim iDFORMACIONParameter As ObjectParameter = If(iDFORMACION IsNot Nothing, New ObjectParameter("IDFORMACION", iDFORMACION), New ObjectParameter("IDFORMACION", GetType(String)))

        Dim iDCATYACIMIENTOParameter As ObjectParameter = If(iDCATYACIMIENTO IsNot Nothing, New ObjectParameter("IDCATYACIMIENTO", iDCATYACIMIENTO), New ObjectParameter("IDCATYACIMIENTO", GetType(String)))

        Dim iNDICADORWEIParameter As ObjectParameter = If(iNDICADORWEI.HasValue, New ObjectParameter("INDICADORWEI", iNDICADORWEI), New ObjectParameter("INDICADORWEI", GetType(Double)))

        Dim wEIINICIALParameter As ObjectParameter = If(wEIINICIAL.HasValue, New ObjectParameter("WEIINICIAL", wEIINICIAL), New ObjectParameter("WEIINICIAL", GetType(Double)))

        Dim rParameter As ObjectParameter = If(r.HasValue, New ObjectParameter("R", r), New ObjectParameter("R", GetType(Double)))

        Dim aPIParameter As ObjectParameter = If(aPI.HasValue, New ObjectParameter("API", aPI), New ObjectParameter("API", GetType(Double)))

        Dim iNYGASParameter As ObjectParameter = If(iNYGAS.HasValue, New ObjectParameter("INYGAS", iNYGAS), New ObjectParameter("INYGAS", GetType(Double)))

        Dim iNYAGUAParameter As ObjectParameter = If(iNYAGUA.HasValue, New ObjectParameter("INYAGUA", iNYAGUA), New ObjectParameter("INYAGUA", GetType(Double)))

        Dim iNDICADORCTParameter As ObjectParameter = If(iNDICADORCT.HasValue, New ObjectParameter("INDICADORCT", iNDICADORCT), New ObjectParameter("INDICADORCT", GetType(Double)))

        Dim cTParameter As ObjectParameter = If(cT.HasValue, New ObjectParameter("CT", cT), New ObjectParameter("CT", GetType(Double)))

        Dim cFParameter As ObjectParameter = If(cF.HasValue, New ObjectParameter("CF", cF), New ObjectParameter("CF", GetType(Double)))

        Dim cWParameter As ObjectParameter = If(cW.HasValue, New ObjectParameter("CW", cW), New ObjectParameter("CW", GetType(Double)))

        Dim sWIParameter As ObjectParameter = If(sWI.HasValue, New ObjectParameter("SWI", sWI), New ObjectParameter("SWI", GetType(Double)))

        Dim fRFACEITEParameter As ObjectParameter = If(fRFACEITE.HasValue, New ObjectParameter("FRFACEITE", fRFACEITE), New ObjectParameter("FRFACEITE", GetType(Double)))

        Dim fRFGASParameter As ObjectParameter = If(fRFGAS.HasValue, New ObjectParameter("FRFGAS", fRFGAS), New ObjectParameter("FRFGAS", GetType(Double)))

        Dim wEICALCULADOParameter As ObjectParameter = If(wEICALCULADO.HasValue, New ObjectParameter("WEICALCULADO", wEICALCULADO), New ObjectParameter("WEICALCULADO", GetType(Double)))

        Dim nFOIParameter As ObjectParameter = If(nFOI.HasValue, New ObjectParameter("NFOI", nFOI), New ObjectParameter("NFOI", GetType(Double)))

        Dim gFGIParameter As ObjectParameter = If(gFGI.HasValue, New ObjectParameter("GFGI", gFGI), New ObjectParameter("GFGI", GetType(Double)))

        Dim nParameter As ObjectParameter = If(n.HasValue, New ObjectParameter("N", n), New ObjectParameter("N", GetType(Double)))

        Dim gParameter As ObjectParameter = If(g.HasValue, New ObjectParameter("G", g), New ObjectParameter("G", GetType(Double)))

        Dim jWParameter As ObjectParameter = If(jW.HasValue, New ObjectParameter("JW", jW), New ObjectParameter("JW", GetType(Double)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("insertarBalance", iDFORMACIONParameter, iDCATYACIMIENTOParameter, iNDICADORWEIParameter, wEIINICIALParameter, rParameter, aPIParameter, iNYGASParameter, iNYAGUAParameter, iNDICADORCTParameter, cTParameter, cFParameter, cWParameter, sWIParameter, fRFACEITEParameter, fRFGASParameter, wEICALCULADOParameter, nFOIParameter, gFGIParameter, nParameter, gParameter, jWParameter)
    End Function

    Public Overridable Function InsertXML(cadena As String, tabla As String) As Integer
        Dim cadenaParameter As ObjectParameter = If(cadena IsNot Nothing, New ObjectParameter("cadena", cadena), New ObjectParameter("cadena", GetType(String)))

        Dim tablaParameter As ObjectParameter = If(tabla IsNot Nothing, New ObjectParameter("tabla", tabla), New ObjectParameter("tabla", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("InsertXML", cadenaParameter, tablaParameter)
    End Function

    Public Overridable Function proc_ACTIVO_PRODUCCION(iDFORMACION As String) As Integer
        Dim iDFORMACIONParameter As ObjectParameter = If(iDFORMACION IsNot Nothing, New ObjectParameter("IDFORMACION", iDFORMACION), New ObjectParameter("IDFORMACION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_ACTIVO_PRODUCCION", iDFORMACIONParameter)
    End Function

    Public Overridable Function proc_ACTIVO_PRODUCCION2(iDFORMACION As String) As ObjectResult(Of proc_ACTIVO_PRODUCCION2_Result)
        Dim iDFORMACIONParameter As ObjectParameter = If(iDFORMACION IsNot Nothing, New ObjectParameter("IDFORMACION", iDFORMACION), New ObjectParameter("IDFORMACION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_ACTIVO_PRODUCCION2_Result)("proc_ACTIVO_PRODUCCION2", iDFORMACIONParameter)
    End Function

    Public Overridable Function proc_ACTIVO_PRODUCCION3(iDFORMACION As String) As ObjectResult(Of proc_ACTIVO_PRODUCCION3_Result)
        Dim iDFORMACIONParameter As ObjectParameter = If(iDFORMACION IsNot Nothing, New ObjectParameter("IDFORMACION", iDFORMACION), New ObjectParameter("IDFORMACION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_ACTIVO_PRODUCCION3_Result)("proc_ACTIVO_PRODUCCION3", iDFORMACIONParameter)
    End Function

    Public Overridable Function proc_actualizarGeneral(tabla As String, cAMPO As String, vALOR As String, iDPK As String) As ObjectResult(Of String)
        Dim tablaParameter As ObjectParameter = If(tabla IsNot Nothing, New ObjectParameter("tabla", tabla), New ObjectParameter("tabla", GetType(String)))

        Dim cAMPOParameter As ObjectParameter = If(cAMPO IsNot Nothing, New ObjectParameter("CAMPO", cAMPO), New ObjectParameter("CAMPO", GetType(String)))

        Dim vALORParameter As ObjectParameter = If(vALOR IsNot Nothing, New ObjectParameter("VALOR", vALOR), New ObjectParameter("VALOR", GetType(String)))

        Dim iDPKParameter As ObjectParameter = If(iDPK IsNot Nothing, New ObjectParameter("IDPK", iDPK), New ObjectParameter("IDPK", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_actualizarGeneral", tablaParameter, cAMPOParameter, vALORParameter, iDPKParameter)
    End Function

    Public Overridable Function PROC_AGREGAR_FORMACION(iDCAMPO As String, iDFORMACION As String) As ObjectResult(Of String)
        Dim iDCAMPOParameter As ObjectParameter = If(iDCAMPO IsNot Nothing, New ObjectParameter("IDCAMPO", iDCAMPO), New ObjectParameter("IDCAMPO", GetType(String)))

        Dim iDFORMACIONParameter As ObjectParameter = If(iDFORMACION IsNot Nothing, New ObjectParameter("IDFORMACION", iDFORMACION), New ObjectParameter("IDFORMACION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("PROC_AGREGAR_FORMACION", iDCAMPOParameter, iDFORMACIONParameter)
    End Function

    Public Overridable Function proc_AGREGARUSUARIO(iNUSER As String, pASSWORD As String, nOMBRE As String, aPELLIDOS As String) As ObjectResult(Of String)
        Dim iNUSERParameter As ObjectParameter = If(iNUSER IsNot Nothing, New ObjectParameter("INUSER", iNUSER), New ObjectParameter("INUSER", GetType(String)))

        Dim pASSWORDParameter As ObjectParameter = If(pASSWORD IsNot Nothing, New ObjectParameter("PASSWORD", pASSWORD), New ObjectParameter("PASSWORD", GetType(String)))

        Dim nOMBREParameter As ObjectParameter = If(nOMBRE IsNot Nothing, New ObjectParameter("NOMBRE", nOMBRE), New ObjectParameter("NOMBRE", GetType(String)))

        Dim aPELLIDOSParameter As ObjectParameter = If(aPELLIDOS IsNot Nothing, New ObjectParameter("APELLIDOS", aPELLIDOS), New ObjectParameter("APELLIDOS", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_AGREGARUSUARIO", iNUSERParameter, pASSWORDParameter, nOMBREParameter, aPELLIDOSParameter)
    End Function

    Public Overridable Function proc_BajaLogica(tABLA As String, cONDICION As String, uSUARIO As String) As ObjectResult(Of String)
        Dim tABLAParameter As ObjectParameter = If(tABLA IsNot Nothing, New ObjectParameter("TABLA", tABLA), New ObjectParameter("TABLA", GetType(String)))

        Dim cONDICIONParameter As ObjectParameter = If(cONDICION IsNot Nothing, New ObjectParameter("CONDICION", cONDICION), New ObjectParameter("CONDICION", GetType(String)))

        Dim uSUARIOParameter As ObjectParameter = If(uSUARIO IsNot Nothing, New ObjectParameter("USUARIO", uSUARIO), New ObjectParameter("USUARIO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_BajaLogica", tABLAParameter, cONDICIONParameter, uSUARIOParameter)
    End Function

    Public Overridable Function proc_ficha_pozo1(iDPOZO As String) As Integer
        Dim iDPOZOParameter As ObjectParameter = If(iDPOZO IsNot Nothing, New ObjectParameter("IDPOZO", iDPOZO), New ObjectParameter("IDPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_ficha_pozo1", iDPOZOParameter)
    End Function

    Public Overridable Function proc_ficha_pozo2(nOMBRE_POZO As String) As ObjectResult(Of proc_ficha_pozo2_Result)
        Dim nOMBRE_POZOParameter As ObjectParameter = If(nOMBRE_POZO IsNot Nothing, New ObjectParameter("NOMBRE_POZO", nOMBRE_POZO), New ObjectParameter("NOMBRE_POZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_ficha_pozo2_Result)("proc_ficha_pozo2", nOMBRE_POZOParameter)
    End Function

    Public Overridable Function proc_ficha_pozo3(iDPOZO As String) As ObjectResult(Of proc_ficha_pozo3_Result)
        Dim iDPOZOParameter As ObjectParameter = If(iDPOZO IsNot Nothing, New ObjectParameter("IDPOZO", iDPOZO), New ObjectParameter("IDPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_ficha_pozo3_Result)("proc_ficha_pozo3", iDPOZOParameter)
    End Function

    Public Overridable Function proc_filtroPozosAgujero(iDCATFORMACION As String) As ObjectResult(Of proc_filtroPozosAgujero_Result)
        Dim iDCATFORMACIONParameter As ObjectParameter = If(iDCATFORMACION IsNot Nothing, New ObjectParameter("IDCATFORMACION", iDCATFORMACION), New ObjectParameter("IDCATFORMACION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_filtroPozosAgujero_Result)("proc_filtroPozosAgujero", iDCATFORMACIONParameter)
    End Function

    Public Overridable Function proc_LOGIN(iNUSER As String, pASSWORD As String) As ObjectResult(Of String)
        Dim iNUSERParameter As ObjectParameter = If(iNUSER IsNot Nothing, New ObjectParameter("INUSER", iNUSER), New ObjectParameter("INUSER", GetType(String)))

        Dim pASSWORDParameter As ObjectParameter = If(pASSWORD IsNot Nothing, New ObjectParameter("PASSWORD", pASSWORD), New ObjectParameter("PASSWORD", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_LOGIN", iNUSERParameter, pASSWORDParameter)
    End Function

    Public Overridable Function proc_modificarClaveUsuario(iDUSUARIO As String, pASSWORDNEW As String) As ObjectResult(Of String)
        Dim iDUSUARIOParameter As ObjectParameter = If(iDUSUARIO IsNot Nothing, New ObjectParameter("IDUSUARIO", iDUSUARIO), New ObjectParameter("IDUSUARIO", GetType(String)))

        Dim pASSWORDNEWParameter As ObjectParameter = If(pASSWORDNEW IsNot Nothing, New ObjectParameter("PASSWORDNEW", pASSWORDNEW), New ObjectParameter("PASSWORDNEW", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_modificarClaveUsuario", iDUSUARIOParameter, pASSWORDNEWParameter)
    End Function

    Public Overridable Function proc_MostrarUsuariosConectados(iDUSER As String) As ObjectResult(Of proc_MostrarUsuariosConectados_Result)
        Dim iDUSERParameter As ObjectParameter = If(iDUSER IsNot Nothing, New ObjectParameter("IDUSER", iDUSER), New ObjectParameter("IDUSER", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_MostrarUsuariosConectados_Result)("proc_MostrarUsuariosConectados", iDUSERParameter)
    End Function

    Public Overridable Function proc_pvtGeneral(iDPVTGENERAL As String) As ObjectResult(Of proc_pvtGeneral_Result)
        Dim iDPVTGENERALParameter As ObjectParameter = If(iDPVTGENERAL IsNot Nothing, New ObjectParameter("IDPVTGENERAL", iDPVTGENERAL), New ObjectParameter("IDPVTGENERAL", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of proc_pvtGeneral_Result)("proc_pvtGeneral", iDPVTGENERALParameter)
    End Function

    Public Overridable Function SP_LOGIN(iNUSER As String, pASSWORD As String) As ObjectResult(Of String)
        Dim iNUSERParameter As ObjectParameter = If(iNUSER IsNot Nothing, New ObjectParameter("INUSER", iNUSER), New ObjectParameter("INUSER", GetType(String)))

        Dim pASSWORDParameter As ObjectParameter = If(pASSWORD IsNot Nothing, New ObjectParameter("PASSWORD", pASSWORD), New ObjectParameter("PASSWORD", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("SP_LOGIN", iNUSERParameter, pASSWORDParameter)
    End Function

    Public Overridable Function SP_LOGIN_FICHA(fICHA As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim fICHAParameter As ObjectParameter = If(fICHA.HasValue, New ObjectParameter("FICHA", fICHA), New ObjectParameter("FICHA", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("SP_LOGIN_FICHA", fICHAParameter)
    End Function

    Public Overridable Function SP_REGISTRARROL(nOMBREROL As String, dESCRIPCION As String) As ObjectResult(Of String)
        Dim nOMBREROLParameter As ObjectParameter = If(nOMBREROL IsNot Nothing, New ObjectParameter("NOMBREROL", nOMBREROL), New ObjectParameter("NOMBREROL", GetType(String)))

        Dim dESCRIPCIONParameter As ObjectParameter = If(dESCRIPCION IsNot Nothing, New ObjectParameter("DESCRIPCION", dESCRIPCION), New ObjectParameter("DESCRIPCION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("SP_REGISTRARROL", nOMBREROLParameter, dESCRIPCIONParameter)
    End Function

    Public Overridable Function SP_REGISTRARUSUARIO(nIVEL As Nullable(Of Integer), rOLES As String) As ObjectResult(Of String)
        Dim nIVELParameter As ObjectParameter = If(nIVEL.HasValue, New ObjectParameter("NIVEL", nIVEL), New ObjectParameter("NIVEL", GetType(Integer)))

        Dim rOLESParameter As ObjectParameter = If(rOLES IsNot Nothing, New ObjectParameter("ROLES", rOLES), New ObjectParameter("ROLES", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("SP_REGISTRARUSUARIO", nIVELParameter, rOLESParameter)
    End Function

    Public Overridable Function DATOSPOZO(iDPOZO As String) As ObjectResult(Of DATOSPOZO_Result)
        Dim iDPOZOParameter As ObjectParameter = If(iDPOZO IsNot Nothing, New ObjectParameter("IDPOZO", iDPOZO), New ObjectParameter("IDPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of DATOSPOZO_Result)("DATOSPOZO", iDPOZOParameter)
    End Function

    Public Overridable Function DATOSUSUARIO(iDUSUARIO As String) As ObjectResult(Of DATOSUSUARIO_Result)
        Dim iDUSUARIOParameter As ObjectParameter = If(iDUSUARIO IsNot Nothing, New ObjectParameter("IDUSUARIO", iDUSUARIO), New ObjectParameter("IDUSUARIO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of DATOSUSUARIO_Result)("DATOSUSUARIO", iDUSUARIOParameter)
    End Function

    Public Overridable Function proc_ConsultaCorelacion_PROFMD(iDMODPOZO As String) As Integer
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_ConsultaCorelacion_PROFMD", iDMODPOZOParameter)
    End Function

    Public Overridable Function proc_ConsultaCorrelacionRes(iDMODPOZO As String) As Integer
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_ConsultaCorrelacionRes", iDMODPOZOParameter)
    End Function

    Public Overridable Function proc_ConsultaPWSC(iDAGUJERO As String, fECHAPRUEBA As String) As Integer
        Dim iDAGUJEROParameter As ObjectParameter = If(iDAGUJERO IsNot Nothing, New ObjectParameter("IDAGUJERO", iDAGUJERO), New ObjectParameter("IDAGUJERO", GetType(String)))

        Dim fECHAPRUEBAParameter As ObjectParameter = If(fECHAPRUEBA IsNot Nothing, New ObjectParameter("FECHAPRUEBA", fECHAPRUEBA), New ObjectParameter("FECHAPRUEBA", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_ConsultaPWSC", iDAGUJEROParameter, fECHAPRUEBAParameter)
    End Function

    Public Overridable Function proc_gastoInyeccionQL(iDMODPOZO As String) As Integer
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_gastoInyeccionQL", iDMODPOZOParameter)
    End Function

    Public Overridable Function proc_gastoInyeccionQO(iDMODPOZO As String) As Integer
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("proc_gastoInyeccionQO", iDMODPOZOParameter)
    End Function

    Public Overridable Function proc_InsertCorrelacion(iDMODPOZO As String, iDCATCORRELACION As String, iDCORRELACION As ObjectParameter) As ObjectResult(Of String)
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Dim iDCATCORRELACIONParameter As ObjectParameter = If(iDCATCORRELACION IsNot Nothing, New ObjectParameter("IDCATCORRELACION", iDCATCORRELACION), New ObjectParameter("IDCATCORRELACION", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_InsertCorrelacion", iDMODPOZOParameter, iDCATCORRELACIONParameter, iDCORRELACION)
    End Function

    Public Overridable Function proc_InsertGASBN(iDMODPOZO As String, iDGASBNR As ObjectParameter) As ObjectResult(Of String)
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_InsertGASBN", iDMODPOZOParameter, iDGASBNR)
    End Function

    Public Overridable Function proc_InsertGastoInyeccion(iDMODPOZO As String, qL As Nullable(Of Double), qO As Nullable(Of Double), iDVLPIPRGASTOINYECCION As ObjectParameter) As ObjectResult(Of String)
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Dim qLParameter As ObjectParameter = If(qL.HasValue, New ObjectParameter("QL", qL), New ObjectParameter("QL", GetType(Double)))

        Dim qOParameter As ObjectParameter = If(qO.HasValue, New ObjectParameter("QO", qO), New ObjectParameter("QO", GetType(Double)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_InsertGastoInyeccion", iDMODPOZOParameter, qLParameter, qOParameter, iDVLPIPRGASTOINYECCION)
    End Function

    Public Overridable Function proc_insertIPR(iDMODPOZO As String, tITULO1 As String, tITULO2 As String) As ObjectResult(Of String)
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Dim tITULO1Parameter As ObjectParameter = If(tITULO1 IsNot Nothing, New ObjectParameter("TITULO1", tITULO1), New ObjectParameter("TITULO1", GetType(String)))

        Dim tITULO2Parameter As ObjectParameter = If(tITULO2 IsNot Nothing, New ObjectParameter("TITULO2", tITULO2), New ObjectParameter("TITULO2", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_insertIPR", iDMODPOZOParameter, tITULO1Parameter, tITULO2Parameter)
    End Function

    Public Overridable Function proc_insertModPozo(iDAGUJERO As String, oBSERVACIONES As String) As ObjectResult(Of String)
        Dim iDAGUJEROParameter As ObjectParameter = If(iDAGUJERO IsNot Nothing, New ObjectParameter("IDAGUJERO", iDAGUJERO), New ObjectParameter("IDAGUJERO", GetType(String)))

        Dim oBSERVACIONESParameter As ObjectParameter = If(oBSERVACIONES IsNot Nothing, New ObjectParameter("OBSERVACIONES", oBSERVACIONES), New ObjectParameter("OBSERVACIONES", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_insertModPozo", iDAGUJEROParameter, oBSERVACIONESParameter)
    End Function

    Public Overridable Function proc_InsertProductividad(iDMODPOZO As String, wCRES As Nullable(Of Double), qGIRES As Nullable(Of Double), iDPRODUCTIVIDAD As ObjectParameter) As ObjectResult(Of String)
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Dim wCRESParameter As ObjectParameter = If(wCRES.HasValue, New ObjectParameter("WCRES", wCRES), New ObjectParameter("WCRES", GetType(Double)))

        Dim qGIRESParameter As ObjectParameter = If(qGIRES.HasValue, New ObjectParameter("QGIRES", qGIRES), New ObjectParameter("QGIRES", GetType(Double)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_InsertProductividad", iDMODPOZOParameter, wCRESParameter, qGIRESParameter, iDPRODUCTIVIDAD)
    End Function

    Public Overridable Function proc_InsertQUICK(iDMODPOZO As String, iDQUICK As ObjectParameter) As ObjectResult(Of String)
        Dim iDMODPOZOParameter As ObjectParameter = If(iDMODPOZO IsNot Nothing, New ObjectParameter("IDMODPOZO", iDMODPOZO), New ObjectParameter("IDMODPOZO", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("proc_InsertQUICK", iDMODPOZOParameter, iDQUICK)
    End Function

    Public Overridable Function PROSPER_ValidarFormacion(iDAGUJERO As String, fECHA As String) As ObjectResult(Of PROSPER_ValidarFormacion_Result)
        Dim iDAGUJEROParameter As ObjectParameter = If(iDAGUJERO IsNot Nothing, New ObjectParameter("IDAGUJERO", iDAGUJERO), New ObjectParameter("IDAGUJERO", GetType(String)))

        Dim fECHAParameter As ObjectParameter = If(fECHA IsNot Nothing, New ObjectParameter("FECHA", fECHA), New ObjectParameter("FECHA", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of PROSPER_ValidarFormacion_Result)("PROSPER_ValidarFormacion", iDAGUJEROParameter, fECHAParameter)
    End Function

    Public Overridable Function CREAR_USUARIO_ADMIN(p_USERNAME As String) As Integer
        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("CREAR_USUARIO_ADMIN", p_USERNAMEParameter)
    End Function

    Public Overridable Function FUNCIONALIDAD_ELIMINAR(p_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("FUNCIONALIDAD_ELIMINAR", p_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function FUNCIONALIDAD_GUARDAR(p_ID As ObjectParameter, p_NOMBRE As String, p_CLAVE As String, p_DESCRIPCION As String, p_ID_PADRE As ObjectParameter, p_USERNAME As String) As Integer
        Dim p_NOMBREParameter As ObjectParameter = If(p_NOMBRE IsNot Nothing, New ObjectParameter("P_NOMBRE", p_NOMBRE), New ObjectParameter("P_NOMBRE", GetType(String)))

        Dim p_CLAVEParameter As ObjectParameter = If(p_CLAVE IsNot Nothing, New ObjectParameter("P_CLAVE", p_CLAVE), New ObjectParameter("P_CLAVE", GetType(String)))

        Dim p_DESCRIPCIONParameter As ObjectParameter = If(p_DESCRIPCION IsNot Nothing, New ObjectParameter("P_DESCRIPCION", p_DESCRIPCION), New ObjectParameter("P_DESCRIPCION", GetType(String)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("FUNCIONALIDAD_GUARDAR", p_ID, p_NOMBREParameter, p_CLAVEParameter, p_DESCRIPCIONParameter, p_ID_PADRE, p_USERNAMEParameter)
    End Function

    Public Overridable Function GRUPO_ELIMINAR(p_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("GRUPO_ELIMINAR", p_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function GRUPO_GUARDAR(p_ID As ObjectParameter, p_NOMBRE As String, p_DESCRIPCION As String, p_USERNAME As String) As Integer
        Dim p_NOMBREParameter As ObjectParameter = If(p_NOMBRE IsNot Nothing, New ObjectParameter("P_NOMBRE", p_NOMBRE), New ObjectParameter("P_NOMBRE", GetType(String)))

        Dim p_DESCRIPCIONParameter As ObjectParameter = If(p_DESCRIPCION IsNot Nothing, New ObjectParameter("P_DESCRIPCION", p_DESCRIPCION), New ObjectParameter("P_DESCRIPCION", GetType(String)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("GRUPO_GUARDAR", p_ID, p_NOMBREParameter, p_DESCRIPCIONParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function GRUPO_USUARIO_AGREGAR(p_GRUPO_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_GRUPO_IDParameter As ObjectParameter = If(p_GRUPO_ID.HasValue, New ObjectParameter("P_GRUPO_ID", p_GRUPO_ID), New ObjectParameter("P_GRUPO_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("GRUPO_USUARIO_AGREGAR", p_GRUPO_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_ELIMINAR(p_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_ELIMINAR", p_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_FUNCIONALIDAD_ELIMINAR(p_ROL_ID As Nullable(Of Decimal), p_FUNCIONALIDAD_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_ROL_IDParameter As ObjectParameter = If(p_ROL_ID.HasValue, New ObjectParameter("P_ROL_ID", p_ROL_ID), New ObjectParameter("P_ROL_ID", GetType(Decimal)))

        Dim p_FUNCIONALIDAD_IDParameter As ObjectParameter = If(p_FUNCIONALIDAD_ID.HasValue, New ObjectParameter("P_FUNCIONALIDAD_ID", p_FUNCIONALIDAD_ID), New ObjectParameter("P_FUNCIONALIDAD_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_FUNCIONALIDAD_ELIMINAR", p_ROL_IDParameter, p_FUNCIONALIDAD_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_FUNCIONALIDAD_GUARDAR(p_ROL_ID As Nullable(Of Decimal), p_FUNCIONALIDAD_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_ROL_IDParameter As ObjectParameter = If(p_ROL_ID.HasValue, New ObjectParameter("P_ROL_ID", p_ROL_ID), New ObjectParameter("P_ROL_ID", GetType(Decimal)))

        Dim p_FUNCIONALIDAD_IDParameter As ObjectParameter = If(p_FUNCIONALIDAD_ID.HasValue, New ObjectParameter("P_FUNCIONALIDAD_ID", p_FUNCIONALIDAD_ID), New ObjectParameter("P_FUNCIONALIDAD_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_FUNCIONALIDAD_GUARDAR", p_ROL_IDParameter, p_FUNCIONALIDAD_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_FUNCIONALIDAD_MODIFICAR(p_ID As Nullable(Of Decimal), p_VALOR As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

        Dim p_VALORParameter As ObjectParameter = If(p_VALOR.HasValue, New ObjectParameter("P_VALOR", p_VALOR), New ObjectParameter("P_VALOR", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_FUNCIONALIDAD_MODIFICAR", p_IDParameter, p_VALORParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_GRUPO_ELIMINAR(p_ROL_ID As Nullable(Of Decimal), p_GRUPO_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_ROL_IDParameter As ObjectParameter = If(p_ROL_ID.HasValue, New ObjectParameter("P_ROL_ID", p_ROL_ID), New ObjectParameter("P_ROL_ID", GetType(Decimal)))

        Dim p_GRUPO_IDParameter As ObjectParameter = If(p_GRUPO_ID.HasValue, New ObjectParameter("P_GRUPO_ID", p_GRUPO_ID), New ObjectParameter("P_GRUPO_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_GRUPO_ELIMINAR", p_ROL_IDParameter, p_GRUPO_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_GRUPO_GUARDAR(p_ROL_ID As ObjectParameter, p_GRUPO_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_GRUPO_IDParameter As ObjectParameter = If(p_GRUPO_ID.HasValue, New ObjectParameter("P_GRUPO_ID", p_GRUPO_ID), New ObjectParameter("P_GRUPO_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_GRUPO_GUARDAR", p_ROL_ID, p_GRUPO_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_GUARDAR(p_ID As ObjectParameter, p_NOMBRE As String, p_DESCRIPCION As String, p_USERNAME As String) As Integer
        Dim p_NOMBREParameter As ObjectParameter = If(p_NOMBRE IsNot Nothing, New ObjectParameter("P_NOMBRE", p_NOMBRE), New ObjectParameter("P_NOMBRE", GetType(String)))

        Dim p_DESCRIPCIONParameter As ObjectParameter = If(p_DESCRIPCION IsNot Nothing, New ObjectParameter("P_DESCRIPCION", p_DESCRIPCION), New ObjectParameter("P_DESCRIPCION", GetType(String)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_GUARDAR", p_ID, p_NOMBREParameter, p_DESCRIPCIONParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_USUARIO_ELIMINAR(p_ROL_ID As Nullable(Of Decimal), p_USUARIO_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_ROL_IDParameter As ObjectParameter = If(p_ROL_ID.HasValue, New ObjectParameter("P_ROL_ID", p_ROL_ID), New ObjectParameter("P_ROL_ID", GetType(Decimal)))

        Dim p_USUARIO_IDParameter As ObjectParameter = If(p_USUARIO_ID.HasValue, New ObjectParameter("P_USUARIO_ID", p_USUARIO_ID), New ObjectParameter("P_USUARIO_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_USUARIO_ELIMINAR", p_ROL_IDParameter, p_USUARIO_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROL_USUARIO_GUARDAR(p_ROL_ID As ObjectParameter, p_USUARIO_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_USUARIO_IDParameter As ObjectParameter = If(p_USUARIO_ID.HasValue, New ObjectParameter("P_USUARIO_ID", p_USUARIO_ID), New ObjectParameter("P_USUARIO_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROL_USUARIO_GUARDAR", p_ROL_ID, p_USUARIO_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function ROLFUNCIONALIDAD_ELIMINAR(p_ROL_REL_FUNCIONALIDAD_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_ROL_REL_FUNCIONALIDAD_IDParameter As ObjectParameter = If(p_ROL_REL_FUNCIONALIDAD_ID.HasValue, New ObjectParameter("P_ROL_REL_FUNCIONALIDAD_ID", p_ROL_REL_FUNCIONALIDAD_ID), New ObjectParameter("P_ROL_REL_FUNCIONALIDAD_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("ROLFUNCIONALIDAD_ELIMINAR", p_ROL_REL_FUNCIONALIDAD_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function SEGURIDAD_LOG(p_USERNAME As String, p_FUNCIONALIDAD_CLAVE As String, p_ID_RELACIONADO As Nullable(Of Decimal)) As Integer
        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Dim p_FUNCIONALIDAD_CLAVEParameter As ObjectParameter = If(p_FUNCIONALIDAD_CLAVE IsNot Nothing, New ObjectParameter("P_FUNCIONALIDAD_CLAVE", p_FUNCIONALIDAD_CLAVE), New ObjectParameter("P_FUNCIONALIDAD_CLAVE", GetType(String)))

        Dim p_ID_RELACIONADOParameter As ObjectParameter = If(p_ID_RELACIONADO.HasValue, New ObjectParameter("P_ID_RELACIONADO", p_ID_RELACIONADO), New ObjectParameter("P_ID_RELACIONADO", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("SEGURIDAD_LOG", p_USERNAMEParameter, p_FUNCIONALIDAD_CLAVEParameter, p_ID_RELACIONADOParameter)
    End Function

    Public Overridable Function USUARIO_ELIMINAR(p_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("USUARIO_ELIMINAR", p_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function USUARIO_GRUPO_ELIMINAR(p_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_IDParameter As ObjectParameter = If(p_ID.HasValue, New ObjectParameter("P_ID", p_ID), New ObjectParameter("P_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("USUARIO_GRUPO_ELIMINAR", p_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function USUARIO_GUARDAR(p_ID As ObjectParameter, p_NOMBRE As String, p_FICHA As Nullable(Of Decimal), p_CORREO As String, p_TELEFONO As String, p_ESTRUCTURA_PEP_ID As Nullable(Of Decimal), p_SEG_GRUPO_ID As Nullable(Of Decimal), p_USERNAME As String) As Integer
        Dim p_NOMBREParameter As ObjectParameter = If(p_NOMBRE IsNot Nothing, New ObjectParameter("P_NOMBRE", p_NOMBRE), New ObjectParameter("P_NOMBRE", GetType(String)))

        Dim p_FICHAParameter As ObjectParameter = If(p_FICHA.HasValue, New ObjectParameter("P_FICHA", p_FICHA), New ObjectParameter("P_FICHA", GetType(Decimal)))

        Dim p_CORREOParameter As ObjectParameter = If(p_CORREO IsNot Nothing, New ObjectParameter("P_CORREO", p_CORREO), New ObjectParameter("P_CORREO", GetType(String)))

        Dim p_TELEFONOParameter As ObjectParameter = If(p_TELEFONO IsNot Nothing, New ObjectParameter("P_TELEFONO", p_TELEFONO), New ObjectParameter("P_TELEFONO", GetType(String)))

        Dim p_ESTRUCTURA_PEP_IDParameter As ObjectParameter = If(p_ESTRUCTURA_PEP_ID.HasValue, New ObjectParameter("P_ESTRUCTURA_PEP_ID", p_ESTRUCTURA_PEP_ID), New ObjectParameter("P_ESTRUCTURA_PEP_ID", GetType(Decimal)))

        Dim p_SEG_GRUPO_IDParameter As ObjectParameter = If(p_SEG_GRUPO_ID.HasValue, New ObjectParameter("P_SEG_GRUPO_ID", p_SEG_GRUPO_ID), New ObjectParameter("P_SEG_GRUPO_ID", GetType(Decimal)))

        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("USUARIO_GUARDAR", p_ID, p_NOMBREParameter, p_FICHAParameter, p_CORREOParameter, p_TELEFONOParameter, p_ESTRUCTURA_PEP_IDParameter, p_SEG_GRUPO_IDParameter, p_USERNAMEParameter)
    End Function

    Public Overridable Function VALIDAR_PERMISO(p_USERNAME As String, p_FUNCIONALIDAD_CLAVE As String) As Integer
        Dim p_USERNAMEParameter As ObjectParameter = If(p_USERNAME IsNot Nothing, New ObjectParameter("P_USERNAME", p_USERNAME), New ObjectParameter("P_USERNAME", GetType(String)))

        Dim p_FUNCIONALIDAD_CLAVEParameter As ObjectParameter = If(p_FUNCIONALIDAD_CLAVE IsNot Nothing, New ObjectParameter("P_FUNCIONALIDAD_CLAVE", p_FUNCIONALIDAD_CLAVE), New ObjectParameter("P_FUNCIONALIDAD_CLAVE", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("VALIDAR_PERMISO", p_USERNAMEParameter, p_FUNCIONALIDAD_CLAVEParameter)
    End Function

    Public Overridable Function GET_DATA_HISTORY(mINUTOS As Nullable(Of Integer), iDCONFIG As Nullable(Of Integer)) As ObjectResult(Of GET_DATA_HISTORY_Result)
        Dim mINUTOSParameter As ObjectParameter = If(mINUTOS.HasValue, New ObjectParameter("MINUTOS", mINUTOS), New ObjectParameter("MINUTOS", GetType(Integer)))

        Dim iDCONFIGParameter As ObjectParameter = If(iDCONFIG.HasValue, New ObjectParameter("IDCONFIG", iDCONFIG), New ObjectParameter("IDCONFIG", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GET_DATA_HISTORY_Result)("GET_DATA_HISTORY", mINUTOSParameter, iDCONFIGParameter)
    End Function

    Public Overridable Function GETVALORPI(iDCONFIG As Nullable(Of Integer)) As ObjectResult(Of GETVALORPI_Result)
        Dim iDCONFIGParameter As ObjectParameter = If(iDCONFIG.HasValue, New ObjectParameter("IDCONFIG", iDCONFIG), New ObjectParameter("IDCONFIG", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GETVALORPI_Result)("GETVALORPI", iDCONFIGParameter)
    End Function

    Public Overridable Function P_TABLERO_RESULTADO(iDTABLERO As Nullable(Of Integer)) As ObjectResult(Of P_TABLERO_RESULTADO_Result)
        Dim iDTABLEROParameter As ObjectParameter = If(iDTABLERO.HasValue, New ObjectParameter("IDTABLERO", iDTABLERO), New ObjectParameter("IDTABLERO", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of P_TABLERO_RESULTADO_Result)("P_TABLERO_RESULTADO", iDTABLEROParameter)
    End Function

    Public Overridable Function pc_PromedioValorPi(iDCONFIG As Nullable(Of Integer), nUMERODIAS As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Double))
        Dim iDCONFIGParameter As ObjectParameter = If(iDCONFIG.HasValue, New ObjectParameter("IDCONFIG", iDCONFIG), New ObjectParameter("IDCONFIG", GetType(Integer)))

        Dim nUMERODIASParameter As ObjectParameter = If(nUMERODIAS.HasValue, New ObjectParameter("NUMERODIAS", nUMERODIAS), New ObjectParameter("NUMERODIAS", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Double))("pc_PromedioValorPi", iDCONFIGParameter, nUMERODIASParameter)
    End Function

    Public Overridable Function Proc_AgregarHistorialTablero() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Proc_AgregarHistorialTablero")
    End Function

    Public Overridable Function TABLERO_ENTIDADES(fECHA As String) As Integer
        Dim fECHAParameter As ObjectParameter = If(fECHA IsNot Nothing, New ObjectParameter("FECHA", fECHA), New ObjectParameter("FECHA", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("TABLERO_ENTIDADES", fECHAParameter)
    End Function

    Public Overridable Function TABLERO_ENTIDADES_HIST(fECHA As String) As Integer
        Dim fECHAParameter As ObjectParameter = If(fECHA IsNot Nothing, New ObjectParameter("FECHA", fECHA), New ObjectParameter("FECHA", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("TABLERO_ENTIDADES_HIST", fECHAParameter)
    End Function

End Class
