'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace WCFService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Messages", [Namespace]:="http://schemas.datacontract.org/2004/07/WCF"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Messages
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EstatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MessageField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Estatus() As String
            Get
                Return Me.EstatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EstatusField, value) <> true) Then
                    Me.EstatusField = value
                    Me.RaisePropertyChanged("Estatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Message() As String
            Get
                Return Me.MessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MessageField, value) <> true) Then
                    Me.MessageField = value
                    Me.RaisePropertyChanged("Message")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Gas", [Namespace]:="http://schemas.datacontract.org/2004/07/WCF"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Gas
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private XauxField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YauxField As Double
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Xaux() As Double
            Get
                Return Me.XauxField
            End Get
            Set
                If (Me.XauxField.Equals(value) <> true) Then
                    Me.XauxField = value
                    Me.RaisePropertyChanged("Xaux")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Yaux() As Double
            Get
                Return Me.YauxField
            End Get
            Set
                If (Me.YauxField.Equals(value) <> true) Then
                    Me.YauxField = value
                    Me.RaisePropertyChanged("Yaux")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="WCFService.IModelo")>  _
    Public Interface IModelo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Monitor", ReplyAction:="http://tempuri.org/IModelo/MonitorResponse")>  _
        Function Monitor(ByVal request As WCFService.MonitorRequest) As WCFService.MonitorResponse
        
        'CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores de devolución.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Monitor", ReplyAction:="http://tempuri.org/IModelo/MonitorResponse")>  _
        Function MonitorAsync(ByVal request As WCFService.MonitorRequest) As System.Threading.Tasks.Task(Of WCFService.MonitorResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Program", ReplyAction:="http://tempuri.org/IModelo/ProgramResponse")>  _
        Sub Program()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Program", ReplyAction:="http://tempuri.org/IModelo/ProgramResponse")>  _
        Function ProgramAsync() As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Reset", ReplyAction:="http://tempuri.org/IModelo/ResetResponse")>  _
        Sub Reset(ByVal IdModPozo As String, ByVal MaxIntentos As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Reset", ReplyAction:="http://tempuri.org/IModelo/ResetResponse")>  _
        Function ResetAsync(ByVal IdModPozo As String, ByVal MaxIntentos As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Delete", ReplyAction:="http://tempuri.org/IModelo/DeleteResponse")>  _
        Sub Delete(ByVal IdModPozo As String, ByVal IdUsuario As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Delete", ReplyAction:="http://tempuri.org/IModelo/DeleteResponse")>  _
        Function DeleteAsync(ByVal IdModPozo As String, ByVal IdUsuario As String) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Execute", ReplyAction:="http://tempuri.org/IModelo/ExecuteResponse")>  _
        Function Execute(ByVal IdModPozo As String, ByVal User As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/Execute", ReplyAction:="http://tempuri.org/IModelo/ExecuteResponse")>  _
        Function ExecuteAsync(ByVal IdModPozo As String, ByVal User As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/SensGas", ReplyAction:="http://tempuri.org/IModelo/SensGasResponse")>  _
        Function SensGas(ByVal IdModPozo As String, ByVal Qgi As Double, ByVal Pwh As Double, ByVal WC As Double) As WCFService.Gas()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IModelo/SensGas", ReplyAction:="http://tempuri.org/IModelo/SensGasResponse")>  _
        Function SensGasAsync(ByVal IdModPozo As String, ByVal Qgi As Double, ByVal Pwh As Double, ByVal WC As Double) As System.Threading.Tasks.Task(Of WCFService.Gas())
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="Monitor", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class MonitorRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public OpenServer As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal OpenServer As String)
            MyBase.New
            Me.OpenServer = OpenServer
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="MonitorResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class MonitorResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public MonitorResult() As WCFService.Messages
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public OpenServer As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal MonitorResult() As WCFService.Messages, ByVal OpenServer As String)
            MyBase.New
            Me.MonitorResult = MonitorResult
            Me.OpenServer = OpenServer
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IModeloChannel
        Inherits WCFService.IModelo, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ModeloClient
        Inherits System.ServiceModel.ClientBase(Of WCFService.IModelo)
        Implements WCFService.IModelo
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function WCFService_IModelo_Monitor(ByVal request As WCFService.MonitorRequest) As WCFService.MonitorResponse Implements WCFService.IModelo.Monitor
            Return MyBase.Channel.Monitor(request)
        End Function
        
        Public Function Monitor(ByRef OpenServer As String) As WCFService.Messages()
            Dim inValue As WCFService.MonitorRequest = New WCFService.MonitorRequest()
            inValue.OpenServer = OpenServer
            Dim retVal As WCFService.MonitorResponse = CType(Me,WCFService.IModelo).Monitor(inValue)
            OpenServer = retVal.OpenServer
            Return retVal.MonitorResult
        End Function
        
        Public Function MonitorAsync(ByVal request As WCFService.MonitorRequest) As System.Threading.Tasks.Task(Of WCFService.MonitorResponse) Implements WCFService.IModelo.MonitorAsync
            Return MyBase.Channel.MonitorAsync(request)
        End Function
        
        Public Sub Program() Implements WCFService.IModelo.Program
            MyBase.Channel.Program
        End Sub
        
        Public Function ProgramAsync() As System.Threading.Tasks.Task Implements WCFService.IModelo.ProgramAsync
            Return MyBase.Channel.ProgramAsync
        End Function
        
        Public Sub Reset(ByVal IdModPozo As String, ByVal MaxIntentos As Integer) Implements WCFService.IModelo.Reset
            MyBase.Channel.Reset(IdModPozo, MaxIntentos)
        End Sub
        
        Public Function ResetAsync(ByVal IdModPozo As String, ByVal MaxIntentos As Integer) As System.Threading.Tasks.Task Implements WCFService.IModelo.ResetAsync
            Return MyBase.Channel.ResetAsync(IdModPozo, MaxIntentos)
        End Function
        
        Public Sub Delete(ByVal IdModPozo As String, ByVal IdUsuario As String) Implements WCFService.IModelo.Delete
            MyBase.Channel.Delete(IdModPozo, IdUsuario)
        End Sub
        
        Public Function DeleteAsync(ByVal IdModPozo As String, ByVal IdUsuario As String) As System.Threading.Tasks.Task Implements WCFService.IModelo.DeleteAsync
            Return MyBase.Channel.DeleteAsync(IdModPozo, IdUsuario)
        End Function
        
        Public Function Execute(ByVal IdModPozo As String, ByVal User As String) As Boolean Implements WCFService.IModelo.Execute
            Return MyBase.Channel.Execute(IdModPozo, User)
        End Function
        
        Public Function ExecuteAsync(ByVal IdModPozo As String, ByVal User As String) As System.Threading.Tasks.Task(Of Boolean) Implements WCFService.IModelo.ExecuteAsync
            Return MyBase.Channel.ExecuteAsync(IdModPozo, User)
        End Function
        
        Public Function SensGas(ByVal IdModPozo As String, ByVal Qgi As Double, ByVal Pwh As Double, ByVal WC As Double) As WCFService.Gas() Implements WCFService.IModelo.SensGas
            Return MyBase.Channel.SensGas(IdModPozo, Qgi, Pwh, WC)
        End Function
        
        Public Function SensGasAsync(ByVal IdModPozo As String, ByVal Qgi As Double, ByVal Pwh As Double, ByVal WC As Double) As System.Threading.Tasks.Task(Of WCFService.Gas()) Implements WCFService.IModelo.SensGasAsync
            Return MyBase.Channel.SensGasAsync(IdModPozo, Qgi, Pwh, WC)
        End Function
    End Class
End Namespace
